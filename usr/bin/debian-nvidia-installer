#!/usr/bin/env bash

# debian-nvidia-installer - NVIDIA Driver Installer for Debian (TUI)
# Copyright (C) 2025 Leonardo Amaral
#
# This file is part of debian-nvidia-installer.
#
# debian-nvidia-installer is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# debian-nvidia-installer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with debian-nvidia-installer. If not, see <https://www.gnu.org/licenses/gpl-3.0.html>.

# Variáveis globais
declare -g SCRIPT_DIR
declare -g LOG_DIR="/var/log/debian-nvidia-installer"

# Detecta se está em modo desenvolvimento ou produção
if [[ -n "$DEVENV" ]]; then
    echo "——— DEVELOPMENT MODE ———"
    SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/../lib/debian-nvidia-installer" && pwd -P)"
else
    SCRIPT_DIR="/usr/lib/debian-nvidia-installer"
fi

# Importação dos módulos
for file in "$SCRIPT_DIR"/*.sh; do source "$file"; done
for file in "$SCRIPT_DIR"/tui/*.sh; do source "$file"; done

# Limpeza / Encerramento
script::exit() {
    local exit_msg
    exit_msg="$(tr::t "log.script.exit")"
    log::info "${1:-$exit_msg}"
    log::input _ "$(tr::t "log.script.pause")"
    exit "${2:-0}"
}

# Configura arquivos de logging
log::setup_logger "$LOG_DIR" "debian-nvidia-installer.log"

# Define o idioma do script com base no sistema
if [ -z "$FORCE_LANG" ] || (( FORCE_LANG == 0 ));; then
    tr::detect_language
fi

# Garante que o script só seja executado com privilégios root
if ! utils::check_sudo; then
    log::warn "$(tr::t "log.rootaccess.required")"
    utils::force_sudo "$@" # Reexecuta o script
    script::exit "" 1
fi

# Verifica e instala pacotes obrigatórios para execução do script
log::info "$(tr::t "log.dependencies.verifying")"
if installer::install_package "dialog"; then
    log::info "$(tr::t "log.dependencies.ok")"
else
    log::critical "$(tr::t "log.dependencies.failed")"
    script::exit "" 1
fi

# Inicia o Dialog de navegação
tui::navigate::main && script::exit || script::exit
